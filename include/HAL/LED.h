#ifndef LED_H_
#define LED_H_

/********************************************************************************************************/
/************************************************Includes************************************************/
/********************************************************************************************************/
#include "GPIO.h"

/********************************************************************************************************/
/************************************************Defines*************************************************/
/********************************************************************************************************/

#define LED_SET_ON  1U
#define LED_SET_OFF 0U

#define LED_CONNECTION_FORWARD 0U
#define LED_CONNECTION_REVERSE 1U


/********************************************************************************************************/
/************************************************Types***************************************************/
/********************************************************************************************************/

typedef struct{
    void *port;
    u32   pin;
    u32   connection;
    u32   defaultState;
}LED_ledconfig_t;


typedef enum{
    LED_Ok,
    LED_Nok,
    LED_NullPtr,
    LED_InvalidLEDName,
    LED_InvalidLEDState
}LED_errorState_t;

/********************************************************************************************************/
/************************************************** APIs ************************************************/
/********************************************************************************************************/

void LED_init(void);
LED_errorState_t LED_setStatus(u8 ledName, u32 state);
LED_errorState_t LED_getState(u8 ledName, u32 *state);


#endif